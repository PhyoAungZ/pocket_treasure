// Top-level build file where you can add configuration options common to all sub-projects/modules.

ext {

    compileSDKVersionValue = 29
    minSDKVersionValue = 22
    targetSDKVersionValue = 29

    libraries = [
            cardView              : 'androidx.cardview:cardview:1.0.0',
            androidXLegacySupport : 'androidx.legacy:legacy-support-v4:1.0.0',
            androidXAppCompat     : 'androidx.appcompat:appcompat:1.1.0',
            lifecycleExtension    : 'androidx.lifecycle:lifecycle-extensions:2.1.0',
            viewModelKtx          : 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.2.0-rc01',
            constraintLayout      : 'androidx.constraintlayout:constraintlayout:2.0.0-beta3',
            fragmentNavigation    : 'androidx.navigation:navigation-fragment-ktx:2.2.0-rc01',
            fragmentNavigationKtx : 'androidx.navigation:navigation-ui-ktx:2.2.0-rc01',
            retrofit              : 'com.squareup.retrofit2:retrofit:2.6.1',
            loggingInterceptor    : 'com.squareup.okhttp3:logging-interceptor:4.1.0',
            dagger                : 'com.google.dagger:dagger:2.24',
            coroutinesCore        : 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.2',
            livedataKtx           : 'androidx.lifecycle:lifecycle-livedata-ktx:2.2.0-rc01',
            picasso               : 'com.squareup.picasso:picasso:2.71828',
            materialDialogCore    : 'com.afollestad.material-dialogs:core:2.8.1',
            materialDialogInputs  : 'com.afollestad.material-dialogs:input:3.0.0-rc2',
            room                  : 'androidx.room:room-runtime:2.2.1',
            roomKtx               : 'androidx.room:room-ktx:2.2.1',
            jodaTime              : 'net.danlew:android.joda:2.10.2',
            rocket                : 'com.github.stavro96:Rocket:1.3.1',
            paging                : 'androidx.paging:paging-runtime:2.1.0',
            fragment              : 'androidx.fragment:fragment:1.2.0-rc01',
            fragmentKtx           : 'androidx.fragment:fragment-ktx:1.2.0-rc01',
            workManager           : 'androidx.work:work-runtime-ktx:2.2.0',
            viewModelSavedState   : 'androidx.lifecycle:lifecycle-viewmodel-savedstate:1.0.0-rc01',
            retrofitMoshiConverter: 'com.squareup.retrofit2:converter-moshi:2.4.0',
            moshiCore             : 'com.squareup.moshi:moshi:1.8.0',
            moshiKotlin           : 'com.squareup.moshi:moshi-kotlin:1.6.0',
            smoothie              : 'com.github.stavro96:smoothie:1.0',
            assistedInject        : 'com.squareup.inject:assisted-inject-annotations-dagger2:0.5.0',
            kotlin                : 'org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version',
            coreKtx               : 'androidx.core:core-ktx:1.2.0-beta01',
            airBnBLottie          : 'com.airbnb.android:lottie:3.0.7',
            firebase              : 'com.google.firebase:firebase-core:17.2.1',
            crashLytics           : 'com.crashlytics.sdk.android:crashlytics:2.10.1',
            locationService       : 'com.google.android.gms:play-services-location:17.0.0'
    ]

    annotationProcessors = [
            moshiKapt         : 'com.squareup.moshi:moshi-kotlin-codegen:1.8.0',
            daggerKapt        : 'com.google.dagger:dagger-compiler:2.24',
            assistedInjectKapt: 'com.squareup.inject:assisted-inject-processor-dagger2:0.5.0',
            roomKapt          : 'androidx.room:room-compiler:2.2.1'
    ]

    testImplementations = [
            coroutinesTest        : 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.3.2',
            jUnit                 : 'junit:junit:4.12',
            mockitoCore           : 'org.mockito:mockito-core:2.28.2',
            jodaTimeTest          : 'joda-time:joda-time:2.10.2',
            mockitoKotlin         : 'com.nhaarman.mockitokotlin2:mockito-kotlin:2.1.0',
            mockitoInline         : 'org.mockito:mockito-inline:2.13.0',
            androidArchCoreTesting: 'android.arch.core:core-testing:1.1.1',
            coroutinesTesting     : 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.3.2',
            mockWebServer         : 'com.squareup.okhttp3:mockwebserver:4.1.0'
    ]

    androidTestImplementations = [
            espressoCore            : 'androidx.test.espresso:espresso-core:3.2.0',
            espressoContrib         : 'androidx.test.espresso:espresso-contrib:3.2.0',
            espressoIntents         : 'androidx.test.espresso:espresso-intents:3.2.0',
            espressoAccessibility   : 'androidx.test.espresso:espresso-accessibility:3.2.0',
            espressoWeb             : 'androidx.test.espresso:espresso-web:3.2.0',
            espressoIdlingConcurrent: 'androidx.test.espresso.idling:idling-concurrent:3.2.0',
            testRunner              : 'androidx.test:runner:1.2.0',
            testRules               : 'androidx.test:rules:1.2.0',
            androidJUnit            : 'androidx.test.ext:junit:1.1.1',
            fragmentTesting         : 'androidx.fragment:fragment-testing:1.2.0-rc01',
            mockitoAndroid          : 'org.mockito:mockito-android:2.24.5',
            workerTest              : 'androidx.work:work-testing:2.2.0'
    ]

    roomIncrementalAnnotationProcessor = [
            "room.schemaLocation"  : "$projectDir/schemas".toString(),
            "room.incremental"     : "true",
            "room.expandProjection": "true"]
}

buildscript {
    ext.kotlin_version = '1.3.50'
    repositories {
        google()
        jcenter()
        maven { url 'https://maven.fabric.io/public' }
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:3.5.1'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "androidx.navigation:navigation-safe-args-gradle-plugin:2.2.0-rc01"
        classpath 'com.google.gms:google-services:4.3.2'
        classpath 'io.fabric.tools:gradle:1.31.0'
    }
}


allprojects {
    repositories {
        google()
        jcenter()
        maven { url 'https://jitpack.io' }
        maven { url 'https://maven.fabric.io/public' }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
